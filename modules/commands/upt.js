module.exports.config = {
	name: "upt",
	version: "1.0.1",
	hasPermssion: 2,
	credits: "Vihoo",
	description: "",
	commandCategory: "Ti·ªán √≠ch",
	usages: "",
	cooldowns: 0,
	denpendencies: {
		"fs-extra": "",
		"request": ""
	}
};
function byte2mb(bytes) {
	const units = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
	let l = 0, n = parseInt(bytes, 10) || 0;
	while (n >= 1024 && ++l) n = n / 1024;
	return `${n.toFixed(n < 10 && l > 0 ? 1 : 0)} ${units[l]}`;
}
module.exports.handleEvent = async ({
	event,
	api,
	Users
}) => {
	const fs = global.nodemodule["fs-extra"];
  const moment = require('moment-timezone');
  const timeStart = Date.now();
  const time = process.uptime(),
		hours = Math.floor(time / (60 * 60)),
		minutes = Math.floor((time % (60 * 60)) / 60),
		seconds = Math.floor(time % 60);
var gio = moment.tz("Asia/Ho_Chi_Minh").format("DD/MM/YYYY - HH:mm:ss");
  var thu =
moment.tz('Asia/Ho_Chi_Minh').format('dddd');
  if (thu == 'Sunday') thu = 'ùóñùóµùòÇÃâ ùóªùóµùóÆÃ£ÃÇùòÅ'
  if (thu == 'Monday') thu = 'ùóßùóµùòÇÃõÃÅ ùóµùóÆùó∂'
  if (thu == 'Tuesday') thu = 'ùóßùóµùòÇÃõÃÅ ùóØùóÆ'
  if (thu == 'Wednesday') thu = 'ùóßùóµùòÇÃõÃÅ ùòÅùòÇÃõ'
  if (thu == "Thursday") thu = 'ùóßùóµùòÇÃõÃÅ ùóªùóÆÃÜùó∫'
  if (thu == 'Friday') thu = 'ùóßùóµùòÇÃõÃÅ ùòÄùóÆÃÅùòÇ'
  if (thu == 'Saturday') thu = 'ùóßùóµùòÇÃõÃÅ ùóØùóÆÃâùòÜ'
	var {
		threadID,
		messageID,
		body,
		senderID
	} = event;
	const thread = global.data.threadData.get(threadID) || {};
	if (typeof thread["uptt"] !== "undefined" && thread["uptt"] == false) return;
const axios = require('axios')
	const pidusage = await global.nodemodule["pidusage"](process.pid);
	let name = await Users.getNameUser(event.senderID);
	if (senderID == api.getCurrentUserID()) return;
const namebot = config.BOTNAME;
  const PREFIX = config.PREFIX;
  const { commands } = global.client; 
	function out(data) {
		api.sendMessage(data, threadID, messageID)
	}
	//tr·∫£ l·ªùi
	var msg = {
		body: `=== [ ùó®ùó£ùóßùóúùó†ùóò ùó•ùó¢ùóïùó¢ùóß ] ===\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüë®‚Äçüíª: ùóõùó∂ùó≤Ã£ÃÇùóª ùòÅùóÆÃ£ùó∂ ùóØùóºùòÅ ${global.config.BOTNAME}\nƒêùóÆÃÉ ùóºùóªùóπ ƒëùòÇùóºÃõÃ£ùó∞\nüçí ${hours} ùó¥ùó∂ùóºÃõÃÄ ${minutes} ùóΩùóµùòÇÃÅùòÅ ${seconds} ùó¥ùó∂ùóÆÃÇùòÜ\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n[üëæ] ‚Üí ùó£ùóøùó≤ùó≥ùó∂ùòÖ ùóµùó≤Ã£ÃÇ ùòÅùóµùóºÃÇÃÅùóªùó¥: ${global.config.PREFIX}\n[üë§] ‚Üí ùó¶ùóºÃÇÃÅ ùóîùó±ùó∫ùó∂ùóª: ${global.config.ADMINBOT.length}\n[üîó] ‚Üí ùóßùóºÃÇÃâùóªùó¥ ùóπùó≤Ã£ÃÇùóªùóµ: ${commands.size}\n[üë•] ‚Üí ùóßùóºÃÇÃâùóªùó¥ ùóªùó¥ùòÇÃõùóºÃõÃÄùó∂: ${global.data.allUserID.length}\n[üèüÔ∏è] ‚Üí ùóßùóºÃÇÃâùóªùó¥ ùóªùóµùóºÃÅùó∫: ${global.data.allThreadID.length}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n====[ üñ•Ô∏è ùó¶ùó¨ùó¶ùóßùóòùó† üñ•Ô∏è ]====\n[üå°Ô∏è] ‚Üí ùóñùó£ùó®: ${pidusage.cpu.toFixed(1)}%\n[üß©] ‚Üí ùó•ùóÆùó∫: ${byte2mb(pidusage.memory)}\n[‚öôÔ∏è] ‚Üí ùó£ùó∂ùóªùó¥: ${Date.now() - timeStart}ùó∫ùòÄ\n[‚õ©Ô∏è] ‚Üí ùóïùóºùòÅ ùóßùòÜùóΩùó≤: ùó†ùó∂ùóøùóÆùó∂\n[üõ∏] ‚Üí ùó£ùóøùó≤ùó≥ùó∂ùòÖ : ${PREFIX}\n[üíæ] ‚Üí ùó©ùó≤ùóøùòÄùó∂ùóºùóª: 1.2.14\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚è∞: ùóïùóÆÃÇùòÜ ùó¥ùó∂ùóºÃõÃÄ ùóπùóÆÃÄ: ${gio} ${thu}`,
		attachment: (await global.nodemodule["axios"]({
			url: (await global.nodemodule["axios"]('http://api.apibot.repl.co/vdgai')).data.data,
			method: "GET",
			responseType: "stream"
		})).data
	}
	// G·ªçi bot
	var arr = ["Upt","Onl","onl","upt"];
	arr.forEach(i => {
		let str = i[0].toUpperCase() + i.slice(1);
		if (body === i.toUpperCase() | body === i | str === body) return out(msg)
	});
};

module.exports.languages = {
	"vi": {
		"on": "B·∫≠t",
		"off": "T·∫Øt",
		"successText": "upt th√†nh c√¥ng",
	},
	"en": {
		"on": "on",
		"off": "off",
		"successText": "hi success!",
	}
}

module.exports.run = async function({
	api,
	event,
	Threads,
	getText
}) {
	const {
		threadID,
		messageID
	} = event;
	let data = (await Threads.getData(threadID)).data;

	if (typeof data["upt"] == "undefined" || data["upt"] == true) data["upt"] = false;
	else data["upt"] = true;

	await Threads.setData(threadID, {
		data
	});
	global.data.threadData.set(threadID, data);
	return api.sendMessage(`${(data["upt"] == false) ? getText("off") : getText("on")} ${getText("successText")}`, threadID, messageID);
  }